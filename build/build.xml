<!--//////////////////////////////////////////////////////////////////////////////////
//
//  Copyright 2012 Freshplanet (http://freshplanet.com | opensource@freshplanet.com)
//  
//  Licensed under the Apache License, Version 2.0 (the "License");
//  you may not use this file except in compliance with the License.
//  You may obtain a copy of the License at
//  
//    http://www.apache.org/licenses/LICENSE-2.0
//  
//  Unless required by applicable law or agreed to in writing, software
//  distributed under the License is distributed on an "AS IS" BASIS,
//  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//  See the License for the specific language governing permissions and
//  limitations under the License.
//  
///////////////////////////////////////////////////////////////////////////////////-->


<project name="ANE" basedir=".." default="compile">

	<!-- Load variables -->
	<property file="build/build.properties"/>

	<macrodef name="echotimestamp">
		<sequential>
			<local name="timestamp" />
				<tstamp>
					<format property="timestamp" pattern="yyyy-MM-dd HH:mm:ss" />
				</tstamp>
			<echo message="${timestamp}" />
		</sequential>
	</macrodef>

	<target name="gradleBuildAndroidLib">
		<exec executable="./gradlew" dir="Android">
			<arg value="build" />
		</exec>
	</target>

	<!-- Clean binaries folder -->
	<target name="cleanBinaries">
		<delete dir="${BINARIES_FOLDER}"/>
		<mkdir dir="${BINARIES_FOLDER}"/>
		<mkdir dir="${BINARIES_FOLDER}/Android"/>
		<mkdir dir="${BINARIES_FOLDER}/Android/res"/>
		<mkdir dir="${BINARIES_FOLDER}/Default"/>
		<mkdir dir="${BINARIES_FOLDER}/iOS"/>
	</target>

	<!-- Copy iOS lib in binaries folder -->
	<target name="iOSCopy">
		<copy file="${IOS_LIB_PATH}" todir="${BINARIES_FOLDER}/iOS"/>
	</target>

	<!-- Copy Android lib in binaries folder -->
	<target name="androidCopy" depends="gradleBuildAndroidLib">
		<delete dir="${ANDROID_LIB_PATH}"/>
		<mkdir dir="${ANDROID_LIB_PATH}"/>
		<unzip src="${ANDROID_AAR_FILE}" dest="${ANDROID_LIB_PATH}/temp"/>
		<move file="${ANDROID_LIB_PATH}/temp/classes.jar" tofile="${ANDROID_LIB_PATH}/${ANDROID_LIB_FILENAME}"/>
		<copy file="${ANDROID_LIB_PATH}/${ANDROID_LIB_FILENAME}" todir="${BINARIES_FOLDER}/Android"/>
		<copy todir="${BINARIES_FOLDER}/Android/res" >  
			<fileset dir="${ANDROID_LIB_PATH}/temp/res" includes="**"/>  
		</copy>
		<copy todir="${BINARIES_FOLDER}/Android" flatten="true">
			<fileset dir="${ANDROID_LIB_PATH}/temp/libs">
				<exclude name="FlashRuntimeExtensions.jar"/>
			</fileset>  
		</copy>
		<!--
		 <copy file="/Users/revolucija/Development/ApplicationUpdaterExtension/Android/app/build/intermediates/exploded-aar/com.android.support/appcompat-v7/19.1.0/jars/classes.jar" tofile="${BINARIES_FOLDER}/Android/android-support-v7.jar"/>
		-->
	</target>

	<!-- Unzip SWF file and copy it to binaries folders -->
	<target name="unzipSwf" depends="androidCopy">
	    <mkdir dir="temp"/>
		<unzip src="${SWC_PATH}" dest="temp"/>
		<copy file="temp/library.swf" todir="${BINARIES_FOLDER}/Android"/>
		<copy file="temp/library.swf" todir="${BINARIES_FOLDER}/iOS"/>
		<delete dir="temp"/>
		<mkdir dir="temp"/>
		<unzip src="${SWC_DEFAULT_PATH}" dest="temp"/>
		<copy file="temp/library.swf" todir="${BINARIES_FOLDER}/Default"/>
		<delete dir="temp"/>
	</target>

	<!-- Compile ANE -->
	<target name="compile" depends="cleanBinaries, iOSCopy, androidCopy, unzipSwf">
		<java jar="${ADT.JAR}" fork="true" failonerror="true">
			<arg value="-package"/>
			<arg value="-target"/>
			<arg value="ane"/>
			<arg value="${ANE_PATH}"/>
			<arg value="${EXTENSION.XML}"/>
			
			<arg value="-swc"/>
			<arg value="${SWC_PATH}"/>
			
			<arg value="-platform"/> 
			<arg value="Android-ARM"/>
			<arg value="-platformoptions"/>
			<arg value="${ANDROID_PLATFORM_OPTIONS}"/>
			<arg value="-C"/>
			<arg value="${BINARIES_FOLDER}/Android"/>
			<arg value="."/>
			
			<arg value="-platform"/>
			<arg value="iPhone-ARM"/>
			<arg value="-platformoptions"/>
			<arg value="${IOS_PLATFORM_OPTIONS}"/>
			<arg value="-C"/>
			<arg value="${BINARIES_FOLDER}/iOS"/>
			<arg value="."/>
			
			<arg value="-platform"/>
			<arg value="default"/>
			<arg value="-C"/>
			<arg value="${BINARIES_FOLDER}/Default"/>
			<arg value="library.swf"/>
		</java>
		<copy file="${ANE_PATH}" todir="ExampleApp/libs"/>
		<copy file="${ANE_PATH}" todir="/Users/revolucija/Development/copilot_mobile_framework/libs"/>
		<copy file="${ANE_PATH}" todir="/Users/revolucija/Development/copilot_mobile_starling_app_v2/libs"/>
		<echotimestamp />
	</target>

</project>
